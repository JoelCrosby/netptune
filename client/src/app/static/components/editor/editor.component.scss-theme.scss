@use '@angular/material' as mat;
@use 'sass:color';
@use '@angular/material/theming';

@mixin editor-theme($theme) {

  $primary: map-get($theme, primary);
  $accent: map-get($theme, accent);
  $warn: map-get($theme, warn);
  $foreground: map-get($theme, foreground);
  $background: map-get($theme, background);

  $is-dark-theme: map-get($theme, is-dark);
  $fill-background: transparent;

  $background-color: mat.get-color-from-palette($background, background);
  $tooltip-background-color: color.scale($background-color, $lightness: 10%);

  .editor {
    background-color: $fill-background;
    color: mat.get-color-from-palette($foreground, text);

    .inline-code,
    .ce-code__textarea.cdx-input {
      color: mat.get-color-from-palette($foreground, text, .6);
      background-color: color.scale($fill-background, $lightness: 10%);
      font-family: SFMono-Regular, Consolas, Liberation Mono, Menlo, monospace;
      white-space: pre-wrap;
    }

    .cdx-input.image-tool__caption {
      display: none;
    }

    .ce-code__textarea.cdx-input {
      @extend .custom-scroll;

      background-color: if($is-dark-theme, #1e1e1e, #fbfbfb);
      color: if($is-dark-theme, #F4F4F4, #1e1e1e);
      border: 1px solid mat.get-color-from-palette($foreground, text, .12);
      border-radius: 3px;
      font-size: 14px;
      resize: none;
    }
  }

  .ce-inline-tool,
  .ce-inline-toolbar__dropdown,
  .cdx-settings-button,
  .ce-settings__button,
  .ce-conversion-tool {
    color: mat.get-color-from-palette($foreground, text);

    &:hover {
      background-color: color.scale($fill-background, $lightness: 10%);
    }
  }

  .ce-paragraph[data-placeholder]:empty::before {
    color: mat.get-color-from-palette($foreground, text, .6);
  }

  .ce-inline-toolbar,
  .ce-settings,
  .ce-conversion-tool,
  .ce-conversion-toolbar {
    border: 0;
    border-color: $tooltip-background-color;
  }

  .ce-inline-toolbar__dropdown {
    border-color:  color.scale($tooltip-background-color, $lightness: 10%);
  }

  .ce-conversion-tool--focused {
    box-shadow: none;
    background-color: mat.get-color-from-palette($primary, .1) !important;
  }

  .ce-toolbar__settings-btn,
  .ce-settings,
  .ce-inline-toolbar,
  .ce-conversion-toolbar,
  .ce-conversion-tool__icon {
    border-radius: 3px;
    background-color: $tooltip-background-color;
    color: mat.get-color-from-palette($foreground, text, .6);
    box-shadow: 0 3px 15px -3px rgba(13, 20, 33, .42);
  }

  .ce-toolbox {
    box-shadow: 0 3px 15px -3px rgba(13, 20, 33, .13);
  }

  .ce-toolbar__plus {
    color: mat.get-color-from-palette($primary, .8);
  }

  .ce-block--selected
  .ce-block__content {
    background-color: color.scale(mat.get-color-from-palette($primary), $lightness: 88%);
  }

  .ce-inline-tool-input {
    color: mat.get-color-from-palette($foreground, text, .6);
    background-color: color.scale($fill-background, $lightness: 20%);
  }

  .cdx-input {
    padding: 4px 8px;
    box-shadow: none;
    border-color: color.scale($fill-background, $lightness: 10%);
  }

  .embed-tool__caption[contentEditable=true][data-placeholder]::before,
  .image-tool__caption[contentEditable=true][data-placeholder]::before {
    color: mat.get-color-from-palette($foreground, text, .6);
  }

  .codex-editor__loader {
    height: 137.78px;
  }

  .codex-editor--narrow {
    .link-tool__image {
      display: block !important;
    }
  }

  .link-tool__content {
    color: inherit !important;
  }

  .link-tool__content--rendered {
    border: 1px solid if($is-dark-theme, #3e3e3e, #c9c9cc7a);
    background-color: if($is-dark-theme, #2f2f2f, #fff);
    box-shadow: none;
  }

  .link-tool__progress {
    background-color: mat.get-color-from-palette($primary, .08);
  }

  .link-tool__input {
    background-color: transparent
  }

  .link-tool__input-holder--error
  .link-tool__input {
    background-color: mat.get-color-from-palette($warn, .08);
  }

  .ce-block--selected .ce-block__content {
    background-color: mat.get-color-from-palette($primary, .12);
  }
}
